Given a number determine whether or not it is valid per the Luhn formula.
The Luhn algorithm is a simple checksum formula used to validate a variety of identification numbers,
such as credit card numbers and Canadian Social Insurance Numbers.
The task is to check if a given string is valid.

Validating a Number
Strings of length 1 or less are not valid. Spaces are allowed in the input, but they should be stripped before checking.
All other non-digit characters are disallowed.

Example 1: valid credit card number
4539 3195 0343 6467
The first step of the Luhn algorithm is to double every second digit, starting from the right. We will be doubling
4_3_ 3_9_ 0_4_ 6_6_
If doubling the number results in a number greater than 9 then subtract 9 from the product. The results of our doubling:
8569 6195 0383 3437
Then sum all of the digits:
8+5+6+9+6+1+9+5+0+3+8+3+3+4+3+7 = 80
If the sum is evenly divisible by 10, then the number is valid. This number is valid!

Example 2: invalid credit card number
8273 1232 7352 0569
Double the second digits, starting from the right
7253 2262 5312 0539
Sum the digits
7+2+5+3+2+2+6+2+5+3+1+2+0+5+3+9 = 57
57 is not evenly divisible by 10, so this number is not valid.

1) number validation

    1)firstly let's check if the length of an input is 1 or less. if it is, we just return false.
    2)then we are asked to trim the string. It can be done by .trim() method, which will return a new string with removed whitesapces from the beginning and end of the input.
    3)now we should check if the string contains any other non-digit characters and if it does we return false. So only digits and spaces should be allowed in the input.
      We can implement that by regex - /^(?=.*\d)[\d ]+$/

2) valid credit card number

    1)to double every second digit, let's firstly split the string with .split('') method which returns an array
    2)then, based on an example, spaces shouldn'd be counted when doubling the number, meaning that we can remove spaces from the array by filter() method. This will make process of doubling easier.
      the thing is, spaces between numbers can be such ' ' or maybe such '    ', for this reason I'll check if the array element is a digit with regex - /^\d+$/  
    3)after this, I'll use for loop to iterate over the array, double every number, and save them into another array.
        1)there's a certain condition when doubling a number. If doubled number greater than 9, we should substract 9 from that number and add that number to a new array in a substracted form.
        2)but if we get get less than 9, we simply keep going
    4)lastly, let's use .reduce() method to calculate the sum of numbers in our new array.
        1)if the sum is devisible by 10 without remainder, we return true
        2)else we return false.



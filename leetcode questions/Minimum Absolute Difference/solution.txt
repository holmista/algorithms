Given an array of distinct integers arr, find all pairs of elements with the minimum absolute difference of any two elements. 

Return a list of pairs in ascending order(with respect to pairs), each pair [a, b] follows

a, b are from arr
a < b
b - a equals to the minimum absolute difference of any two elements in arr

example 1

Input: arr = [4,2,1,3]
Output: [[1,2],[2,3],[3,4]]
Explanation: The minimum absolute difference is 1. List all pairs with difference equal to 1 in ascending order.

example 2

Input: arr = [1,3,6,10,15]
Output: [[1,3]]

example 3

Input: arr = [3,8,-10,23,19,-4,-14,27]
Output: [[-14,-10],[19,23],[23,27]


In this problem we should find pairs of numbers with the minimum absolute difference. The numbers given in the array are not sorted which means that in order for us to check every possible
difference between numbers, we should do a double for loop. For example, in example 1, we should check difference between [4, 2], [4,1], [4,3], [2,1] and so on. This approach is inefficient
because its time complexity is O(n^2). A better time complexity can be achieved if we firstly sorted the array in ascending order. In example 2 the array happened to be sorted so let's take that
as an example. In sorted array we don't need to check every pair of elements, since arr[i] < arr[i+1] by default, so we can just check adjacent pairs which is O(n) time complexity. 

abs(1-3) = 2 Difference 1
abs(3-6) = 3 Difference 2
abs(6-10) = 4 Difference 3
abs(10-5) = 5 Difference 4

In this case 2 is the minimum absolute difference so we return [[1,3]] as an answer. The problem is how can we track the minimum difference and how can we map that difference to corresponding
pair of numbers. Notice that the amount of numbers in array of example 2 is 5 but we get just 4 differences. Difference 1 corresponds to [1,3] which are 0th and 1st numbers.
Difference 2  corresponds to [3,6] which are 1st and 2nd elements in the array. So if we put the differences in an array, each difference would correspond to the numbers with indexes
i and i+1, i being the index of the difference. So we can put all the differences in an array, find the minimum difference, map it to corresponding numbers and return an array of
those numbers.